========
OT Tests
========

Tests in this directory are for operational transformation when branches have
multiple ops before they are brought back together. Single op to op
transformation tests are in the op directory.

Tips for Writing OT Tests
=========================

To fully test sequences of ops, they should be added to changesets, which are
then added to a document. The document then handles ot. Documents can be
created with an initial snapshot, then the root changeset is a 'set' op with
that python object::
   doc = Document(snapshot='123abcde789') 
   root = doc.get_root_changeset()

By default, when a doc is created, changesets it receives are added to a
queue, and are not immediately applied. To automatically pull from the queue,
mark that the document has no event loop ::
    doc.HAS_EVENT_LOOP = False
   

Notes for Reading OT Tests
==========================

OT tests are written systematically where possible (meaning 'hardly
ever'). There are too many combinations for combining ops, so tests are more
anecdotal than comprehensive. Some tests are based on glitches found when
actually working collaboratively, so they can but unnecessarily lengthy or
convoluted.

Also, because the test docs handle parallel branches, these effectively test
how Hazards are collected and applied during ot (even though they are not
explicitly mentioned in many of these tests).
